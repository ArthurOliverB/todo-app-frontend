{"version":3,"sources":["assets/plus.png","config/config.js","components/Card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","baseUrl","Card","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","name","note","prio","editable","handleNameChange","bind","assertThisInitialized","handleNoteChange","setState","props","status","e","target","value","_this2","react_default","a","createElement","className","onClick","changeClass","placeholder","onChange","animateButton","element","classList","add","addEventListener","handleAnimationEnd","remove","removeEventListener","console","log","undefined","postNewTask","reset","alert","document","querySelectorAll","_this3","axios","post","then","resp","onPostTask","data","_this4","deletedId","delete","concat","onDeleteTask","staticEditing","split","elementClass","taskPrio","_this5","tagClassName","readOnly","makeEditable","deleteTask","_this6","put","response","objectSpread","parentDiv","parentNode","title","children","tag","updateTask","renderEditable","renderStatic","React","Component","App","handleNewTask","task","auxTasks","toConsumableArray","tasks","unshift","handleDeleteTask","filter","_id","get","fetchTasks","reverse","items","map","index","key","src_components_Card","itemsComponents","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc2d3cfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.813c1b09.png\";","const baseUrl =  'https://cod3r-todo-backend.herokuapp.com/tasks'\n\nexport default baseUrl ","import React from 'react';\nimport animate from 'animate.css'\nimport './Card.css';\nimport plus from '../assets/plus.png'\nimport baseUrl from '../config/config.js'\nimport axios from 'axios'\nclass Card extends React.Component {\n    \n    constructor() {\n        super()\n        \n        this.state = {\n            id: '',\n            name: '',\n            note: '', \n            prio: '',\n            editable: ''\n        }\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handleNoteChange = this.handleNoteChange.bind(this)\n    }\n\n   componentWillMount() {\n       this.setState({\n            id: this.props.id,\n            name: this.props.name,\n            note: this.props.note, \n            prio: this.props.status\n       })       \n   }\n\n    handleNameChange(e) {\n        this.setState({\n            name: e.target.value\n        })\n    }\n    handleNoteChange(e) {\n        this.setState({\n            note: e.target.value\n        })\n    }\n    \n    renderEditable() {\n        \n        return (\n            <div className=\"static\">\n                <div className=\"card-container static editable\">\n                    <div className=\"tag event editable\" onClick={e => this.changeClass(e, false)}></div>\n                    <div className=\"card-info\">\n                        <div className=\"header-wrapper editable\">\n                            <div className=\"card-header editable\">\n                                <input className=\"input title\" placeholder=\"Nova tarefa\" value={this.state.name} onChange={this.handleNameChange} />\n                            </div>\n                        </div>\n                        <div className=\"content-wrapper editable\">\n                            <div className=\"card-content editable\">\n                                <input className=\"input subtitle\" placeholder=\"Notas\" value={this.state.note} onChange={this.handleNoteChange} />\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-actions\">\n                        <button className=\"done\" onClick={e => this.animateButton(e)}>\n                        </button>\n\n                    </div>\n                </div>\n            </div> \n        )\n    }\n    \n    animateButton(e) {\n        let element = e.target\n        \n        element.classList.add('animated', 'bounceIn')\n\n        function handleAnimationEnd() {\n            element.classList.remove('animated', 'bounceIn')\n            element.removeEventListener('animationend', handleAnimationEnd)\n        }\n        element.addEventListener('animationend', handleAnimationEnd)\n        console.log(this.state.prio);\n        \n        if((this.state.prio !== '' && this.state.prio != undefined) && this.state.name!== '' && this.state.note!=='') {\n            \n            this.postNewTask()\n            this.reset(e)\n        } else {\n            alert(\"Preencha todos os campos\")\n        }\n    }\n    reset(e) {\n        let element = document.querySelectorAll(\"div[class^=tag]\")[0]\n        \n        element.className = 'tag event editable' \n\n        this.setState({\n            name: '',\n            note: '',\n            prio: ''\n        })\n    }\n    postNewTask() {\n                \n        axios.post( baseUrl, {\n            name: this.state.name,\n            note: this.state.note,\n            prio: this.state.prio\n        }).then(resp => {\n            this.props.onPostTask(resp.data)\n        })\n    }\n    // [[TODO]]\n    deleteTask() {\n        const deletedId = this.state.id\n        console.log(\"Card: \" + this.state.name);\n        \n        axios.delete(baseUrl +`/${deletedId}`).then(resp => {\n            this.props.onDeleteTask(deletedId)\n        })\n    }\n\n    changeClass(e, staticEditing) {\n\n        let element = e.target\n\n        let className = element.className.split(' ')[1]\n        let elementClass = ''\n        let taskPrio = ''\n        if(element.className.split(' ')[2] === 'editable') {\n            switch (className) {\n                case 'success':\n                    elementClass = 'warning'\n                    taskPrio = 'm'\n                    break\n                case 'warning':\n                    elementClass = 'failure'\n                    taskPrio = 'h'\n                    break\n                case 'failure':\n                    elementClass = 'success'\n                    taskPrio = 'b'\n                    break\n                default:\n                    elementClass = 'success'\n                    taskPrio = 'b'\n                    break\n            }\n            element.className = 'tag ' + elementClass + ' editable'\n            \n            this.setState({\n                prio: taskPrio,\n                editable: staticEditing? true : false\n            })\n        }\n    }\n\n    renderStatic() {\n        let status = ''\n\n        if (this.state.prio === 'h') {\n            status = 'failure'\n        } else if (this.state.prio === 'm') {\n            status = 'warning'\n        } else {\n            status = 'success'\n        }\n        const editable = this.state.editable? ' editable' : ''\n        const tagClassName = 'tag ' + status + editable\n        \n        return (\n            <div className=\"card-container\">\n                <div className={tagClassName} onClick={e => this.changeClass(e, true)}> </div>\n                <div className=\"card-info\">\n                    <div className=\"header-wrapper\">\n                        <div className=\"card-header\">\n                        <input className=\"input title\" placeholder = \"Nova tarefa\" value={this.state.name} onChange={this.handleNameChange} readOnly/>\n                        </div>\n                    </div>\n                    <div className=\"content-wrapper\">\n                        <div className=\"card-content\">\n                            <input className=\"input subtitle\" placeholder = \"Notas\" value={this.state.note} onChange={this.handleNoteChange} readOnly/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card-actions\">\n                    <button className=\"done\"></button>\n                    <button className=\"edit\" onClick={ e => this.makeEditable(e)}></button>\n                    <button className=\"delete\" onClick={e => this.deleteTask(e)}></button>\n                </div>\n            </div>\n        )\n    }\n\n    updateTask(id) {\n        axios.put(baseUrl + `/${id}`, {\n            name: this.state.name,\n            note: this.state.note,\n            prio: this.state.prio\n        }).then(response => {\n            this.setState({\n                ...response.data\n            })\n            \n        })\n    }\n    makeEditable(e) {\n        let parentDiv = e.target.parentNode.parentNode\n        let className = parentDiv.classList[1]\n        let title = parentDiv.children[1].children[0].children[0].children[0]\n        let note = parentDiv.children[1].children[1].children[0].children[0]\n        let tag = parentDiv.children[0]\n\n        \n        \n        if(className) {\n            parentDiv.className = 'card-container'\n            title.readOnly = true\n            note.readOnly = true\n            // VERIFICAR\n            \n            tag.className = tag.className.split(' editable')[0]\n            \n            this.updateTask(this.state.id)\n        } else {\n            parentDiv.className = 'card-container editable'\n            title.readOnly = false\n            note.readOnly = false\n            tag.className += ' editable'\n\n        }\n    }\n    render() {\n        \n        return(\n            this.props.editable === true ? this.renderEditable() : this.renderStatic()\n        )\n    }\n}\n\nexport default Card;\n","import React from 'react';\nimport './App.css';\nimport './components/Card.css';\nimport axios from 'axios'\nimport Card from './components/Card'\nimport animate from 'animate.css'\nimport baseUrl from './config/config.js'\nclass App extends React.Component {\n\n  constructor() {\n    \n    super()\n    this.state = {\n      tasks: []\n    }\n  }\n  handleNewTask = (task) => {\n    // (this);\n    const auxTasks = [ ...this.state.tasks ]\n    \n    auxTasks.unshift(task)\n    \n    console.log(auxTasks);\n    \n    this.setState({ tasks: auxTasks })\n  }\n  \n  handleDeleteTask = (id) => {\n    const auxTasks = this.state.tasks.filter(task => {\n      return task._id != id\n    })\n    \n    console.log(auxTasks);\n    \n    \n    this.setState({tasks:auxTasks})\n  }\n\n  fetchTasks() {\n\n    return axios.get(baseUrl)\n  }\n\n  componentWillMount() {\n    this.fetchTasks().then(response => {\n      \n      this.setState({tasks: [...response.data].reverse()})      \n    })\n  }\n  itemsComponents() {    \n    const items = this.state.tasks.map((task, index) => {\n      \n      return (\n          <div className=\"animated bounceInLeft faster\" key={task._id}>\n            <Card id= {task._id} status={task.prio} name={task.name} note={task.note} editable=\"false\" onDeleteTask = {this.handleDeleteTask}></Card>\n          </div>\n      )\n    })\n    return (\n      <div>\n        {items}\n      </div>\n    )\n  }\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <div className=\"todo\">\n          <div className=\"header\">\n            <div className=\"date\">\n              <h2>Hoje</h2>\n            </div>\n          </div>\n          <Card name=\"\" note=\"\" editable= {true} onPostTask = {this.handleNewTask}></Card>\n          {this.itemsComponents()}\n        </div>\n      </div>\n    ) \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}